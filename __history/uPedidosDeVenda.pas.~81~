unit uPedidosDeVenda;

interface

uses
  Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Grids, Vcl.DBGrids,
  Vcl.StdCtrls, uDM, Vcl.ExtCtrls, Contr.Controller, Vcl.Buttons, Vcl.ComCtrls,
  Vcl.Menus;

type
  TfrmPedidosDeVenda = class(TForm)
    dbgGrid: TDBGrid;
    pnTotalDoPedido: TPanel;
    Panel1: TPanel;
    pnPedido: TPanel;
    pnMain: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    edCodigoCliente: TEdit;
    edNomeCliente: TEdit;
    edCidadeCliente: TEdit;
    edUFCliente: TEdit;
    Label5: TLabel;
    edNumero_pedido: TEdit;
    Label6: TLabel;
    edData_emissao: TEdit;
    Panel3: TPanel;
    Panel2: TPanel;
    bbAcrescentarProduto: TBitBtn;
    bbGravarPedido: TBitBtn;
    bbApagarPedido: TBitBtn;
    bbCarregarPedido: TBitBtn;
    bbNovoPedido: TBitBtn;
    lbPedidoNovo: TLabel;
    MainMenu1: TMainMenu;
    Opes1: TMenuItem;
    miConsultarClientes: TMenuItem;
    miConsultarProdutos: TMenuItem;
    N1: TMenuItem;
    Fechar1: TMenuItem;

    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);

    procedure edCodigoClienteKeyPress(Sender: TObject; var Key: Char);
    procedure edCodigoClienteChange(Sender: TObject);
    procedure bbAcrescentarProdutoClick(Sender: TObject);
    procedure bbGravarPedidoClick(Sender: TObject);
    procedure bbApagarPedidoClick(Sender: TObject);
    procedure bbCarregarPedidoClick(Sender: TObject);
    procedure bbNovoPedidoClick(Sender: TObject);
    procedure miConsultarClientesClick(Sender: TObject);
    procedure miConsultarProdutosClick(Sender: TObject);
    procedure Fechar1Click(Sender: TObject);

  private


  public
    Control : TControl;

  end;

var
  frmPedidosDeVenda: TfrmPedidosDeVenda;

implementation

{$R *.dfm}

uses View.Show, Winapi.Windows, uAdicionarItem, uConsultarClientes;

procedure TfrmPedidosDeVenda.bbAcrescentarProdutoClick(Sender: TObject);
begin
  if edCodigoCliente.Text <> '' then begin
    Control.AcrescentarProdutoAoPedido( StrToInt( edCodigoCliente.Text ) );
  end;
end;

procedure TfrmPedidosDeVenda.bbApagarPedidoClick(Sender: TObject);
begin
  Control.ApagarPedido;
end;

procedure TfrmPedidosDeVenda.bbCarregarPedidoClick(Sender: TObject);
begin
  Control.CarregarPedido;
  if dbgGrid.CanFocus then begin
    dbgGrid.SetFocus;
  end;
end;

procedure TfrmPedidosDeVenda.bbGravarPedidoClick(Sender: TObject);
begin
  Control.GravarPedido;
end;

procedure TfrmPedidosDeVenda.bbNovoPedidoClick(Sender: TObject);
begin
  Control.NovoPedido;
end;

procedure TfrmPedidosDeVenda.edCodigoClienteChange(Sender: TObject);
begin
  Control.MostrarDadosDoCliente( false );
end;

procedure TfrmPedidosDeVenda.edCodigoClienteKeyPress(Sender: TObject; var Key: Char);
var aCodigo: integer;
begin
  if Key = #13 then begin

    aCodigo := StrToIntDef( edCodigoCliente.Text, -1 );
    if aCodigo = -1 then begin
      exit;
    end;

    if not Control.PesquisarCliente( aCodigo ) then begin
      Showmessage('Código do cliente não existe');
      exit;
    end;

  end;
end;

procedure TfrmPedidosDeVenda.Fechar1Click(Sender: TObject);
begin
  Close;
end;

procedure TfrmPedidosDeVenda.FormCreate(Sender: TObject);
begin
  Control := TControl.Create;
end;

procedure TfrmPedidosDeVenda.FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
  if dbgGrid.Focused and DM.mtProdutosDoPedido.Active and (DM.mtProdutosDoPedido.RecordCount>0) then begin
    // tecla Enter
    if (Key = VK_RETURN) and (dbgGrid.Focused) then begin
       Key := 0;
       Control.EditarDadosDoProdutoDaLista( DM.mtProdutosDoPedido.FieldByName('Autoincrem').AsInteger );
       exit;
    end;
    // tecla Del
    if key = VK_DELETE then begin
       Key := 0;
       if Control.Confirmar('Deseja realmente excluir o produto da lista?') then begin
         Control.ExcluirProdutoDaListaDoPedido( DM.mtProdutosDoPedido.FieldByName('Autoincrem').AsInteger );
       end;
       exit;
    end;
  end;
end;

procedure TfrmPedidosDeVenda.FormShow(Sender: TObject);
begin
  Control.MostrarDadosDoCliente( false );
end;

procedure TfrmPedidosDeVenda.miConsultarClientesClick(Sender: TObject);
var f: TfrmConsultarClientes;
begin
  f := TfrmConsultarClientes.Create( self );
  try
    f.ShowModal;
  finally
    f.Free;
  end;
end;

procedure TfrmPedidosDeVenda.miConsultarProdutosClick(Sender: TObject);
begin
  // F3

end;

end.
